{"version":3,"sources":["Components/Images/anime/anime1.jpg","Components/Images/anime/anime2.jpg","Components/Images/anime/anime3.jpg","Components/Images/anime/anime4.png","Components/Images/anime/anime5.png","Components/Images/movies/movie1.jpg","Components/Images/movies/movie2.jpg","Components/Images/movies/movie3.jpg","Components/Images/movies/movie4.jpg","Components/Images/movies/movie5.jpg","data/animeData.js","data/movieData.js","Components/Header/Header.js","Components/singleQuestion/SingleQuestion.js","Components/Pagination/Pagination.js","Components/modal/Modal.js","Components/List/List.js","Components/Title/Title.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","animeData","id","uuid","img","anime1","answers","title","correct","anime2","anime3","anime4","anime5","movie1","movie2","movie3","movie4","movie5","Header","_ref","chooseQuiz","react_default","a","createElement","className","map","item","index","onClick","SingleQuestion","checkedAnswersByUser","getCheckedAnswers","isSubmitted","isAnswerAlreadyChoosen","previouslyCeckedAnswerId","_useState","useState","_useState2","Object","slicedToArray","value","setValue","changedQuestion","find","questionId","answerId","src","alt","RadioGroup","aria-label","name","onChange","event","target","console","log","_ref2","FormControlLabel","key","control","Radio","label","Pagination","paginationData","handlePaginationChange","pageNumber","useStyles","makeStyles","theme","createStyles","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","modalTitle","textAlign","TransitionsModal","handleSubmit","points","classes","_React$useState","React","_React$useState2","open","setOpen","Button","variant","color","size","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","style","fontSize","List","data","currentPage","setCurrentPage","indexOfLastQuestion","indexOfFirstQuestion","totalPages","Math","ceil","length","currentQuerstions","slice","isLastQuestion","Card","Components_singleQuestion_SingleQuestion","Components_Pagination_Pagination","Number","innerText","props","HEADER_TITLES","quizzes","movieData","App","quiz","setQuiz","_useState3","_useState4","setPaginationData","_useState5","_useState6","setIsSubmitted","_useState7","_useState8","checkedAnswers","setCheckedAnswers","_useState9","_useState10","setPoints","result","useEffect","foundAnswer","answer","changePaginationData","Components_Header_Header","Title_Title","Components_List_List","some","newCheckedAnswers","objectSpread","concat","toConsumableArray","forEach","checkedAnswer","question","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.4c568a6e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/anime1.41dd3ac5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/anime2.2d778dc9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/anime3.d7f8c34e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/anime4.718dc0ce.png\";","module.exports = __webpack_public_path__ + \"static/media/anime5.513dce80.png\";","module.exports = __webpack_public_path__ + \"static/media/movie1.6608c18a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/movie2.d686d734.jpg\";","module.exports = __webpack_public_path__ + \"static/media/movie3.9afa304f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/movie4.53ddd30b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/movie5.7d1b9149.jpg\";","import uuid from \"react-uuid\";\r\n// components\r\nimport anime1 from \"../Components/Images/anime/anime1.jpg\";\r\nimport anime2 from \"../Components/Images/anime/anime2.jpg\";\r\nimport anime3 from \"../Components/Images/anime/anime3.jpg\";\r\nimport anime4 from \"../Components/Images/anime/anime4.png\";\r\nimport anime5 from \"../Components/Images/anime/anime5.png\";\r\n\r\nconst animeData = [\r\n    {\r\n        id: uuid(),\r\n        img: anime1,\r\n        answers: [\r\n            {\r\n                id: uuid(),\r\n                title: \"No game no life\",\r\n                correct: false,\r\n            },\r\n            {\r\n                id: uuid(),\r\n                title: \"Charlotta\",\r\n                correct: true,\r\n            },\r\n            {\r\n                id: uuid(),\r\n                title: \"Yuri!!! on Ice\",\r\n                correct: false,\r\n            },\r\n            {\r\n                id: uuid(),\r\n                title: \"Your name\",\r\n                correct: false,\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        id: uuid(),\r\n        img: anime2,\r\n        answers: [\r\n            {\r\n                id: uuid(),\r\n                title: \"Run with the Wind\",\r\n                correct: false,\r\n            },\r\n            {\r\n                id: uuid(),\r\n                title: \"Eve no Jikan\",\r\n                correct: false,\r\n            },\r\n            {\r\n                id: uuid(),\r\n                title: \"Mob Psycho 100\",\r\n                correct: false,\r\n            },\r\n            {\r\n                id: uuid(),\r\n                title: \"Gintama\",\r\n                correct: true,\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        id: uuid(),\r\n        img: anime3,\r\n        answers: [\r\n            {\r\n                id: uuid(),\r\n                title: \"One punch man\",\r\n                correct: true,\r\n            },\r\n            {\r\n                id: uuid(),\r\n                title: \"Eve no Jikan\",\r\n                correct: false,\r\n            },\r\n            {\r\n                id: uuid(),\r\n                title: \"Run with the Wind\",\r\n                correct: false,\r\n            },\r\n            {\r\n                id: uuid(),\r\n                title: \"King Artur\",\r\n                correct: false,\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        id: uuid(),\r\n        img: anime4,\r\n        answers: [\r\n            {\r\n                id: uuid(),\r\n                title: \"The Rising of the Axe Hero\",\r\n                correct: false,\r\n            },\r\n            {\r\n                id: uuid(),\r\n                title: \"One punch man\",\r\n                correct: false,\r\n            },\r\n            {\r\n                id: uuid(),\r\n                title: \"7 deadly sins\",\r\n                correct: true,\r\n            },\r\n            {\r\n                id: uuid(),\r\n                title:\r\n                    \"JoJo’s Bizarre Adventure: Stardust Crusaders - Battle in Egypt\",\r\n                correct: false,\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        id: uuid(),\r\n        img: anime5,\r\n        answers: [\r\n            {\r\n                id: uuid(),\r\n                title: \"Pennywise\",\r\n                correct: false,\r\n            },\r\n            {\r\n                id: uuid(),\r\n                title: 'Miss Kobayashi\"s Dragon Maid',\r\n                correct: true,\r\n            },\r\n            {\r\n                id: uuid(),\r\n                title: \"Shelter\",\r\n                correct: false,\r\n            },\r\n            {\r\n                id: uuid(),\r\n                title: \"Out of Sight\",\r\n                correct: false,\r\n            },\r\n        ],\r\n    },\r\n];\r\n\r\nexport default animeData;\r\n","import uuid from \"react-uuid\";\r\n// components\r\nimport movie1 from \"../Components/Images/movies/movie1.jpg\";\r\nimport movie2 from \"../Components/Images/movies/movie2.jpg\";\r\nimport movie3 from \"../Components/Images/movies/movie3.jpg\";\r\nimport movie4 from \"../Components/Images/movies/movie4.jpg\";\r\nimport movie5 from \"../Components/Images/movies/movie5.jpg\";\r\n\r\nconst animeData = [\r\n    {\r\n        id: uuid(),\r\n        img: movie1,\r\n        answers: [\r\n            {\r\n                id: uuid(),\r\n                title: \"CUSP\",\r\n                correct: false,\r\n            },\r\n            {\r\n                id: uuid(),\r\n                title: \"I was a simple man\",\r\n                correct: false,\r\n            },\r\n            {\r\n                id: uuid(),\r\n                title: \"Joker\",\r\n                correct: true,\r\n            },\r\n            {\r\n                id: uuid(),\r\n                title: \"There Will Be Blood\",\r\n                correct: false,\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        id: uuid(),\r\n        img: movie2,\r\n        answers: [\r\n            {\r\n                id: uuid(),\r\n                title: \"Underwater\",\r\n                correct: false,\r\n            },\r\n            {\r\n                id: uuid(),\r\n                title: \"Robin Hood\",\r\n                correct: false,\r\n            },\r\n            {\r\n                id: uuid(),\r\n                title: \"Vikings\",\r\n                correct: true,\r\n            },\r\n            {\r\n                id: uuid(),\r\n                title: \"Pathfinder\",\r\n                correct: false,\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        id: uuid(),\r\n        img: movie3,\r\n        answers: [\r\n            {\r\n                id: uuid(),\r\n                title: \"Fury\",\r\n                correct: false,\r\n            },\r\n            {\r\n                id: uuid(),\r\n                title: \"1917\",\r\n                correct: true,\r\n            },\r\n            {\r\n                id: uuid(),\r\n                title: \"Dunkirk\",\r\n                correct: false,\r\n            },\r\n            {\r\n                id: uuid(),\r\n                title: \"Stalingrad\",\r\n                correct: false,\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        id: uuid(),\r\n        img: movie4,\r\n        answers: [\r\n            {\r\n                id: uuid(),\r\n                title: \"Hot shots\",\r\n                correct: false,\r\n            },\r\n            {\r\n                id: uuid(),\r\n                title: \"2 and a half men\",\r\n                correct: false,\r\n            },\r\n            {\r\n                id: uuid(),\r\n                title: \"scary movie\",\r\n                correct: true,\r\n            },\r\n            {\r\n                id: uuid(),\r\n                title: \"The hero\",\r\n                correct: false,\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        id: uuid(),\r\n        img: movie5,\r\n        answers: [\r\n            {\r\n                id: uuid(),\r\n                title: \"Watchmen\",\r\n                correct: true,\r\n            },\r\n            {\r\n                id: uuid(),\r\n                title: 'Smile',\r\n                correct: false,\r\n            },\r\n            {\r\n                id: uuid(),\r\n                title: \"Shelter\",\r\n                correct: false,\r\n            },\r\n            {\r\n                id: uuid(),\r\n                title: \"Out of Sight\",\r\n                correct: false,\r\n            },\r\n        ],\r\n    },\r\n];\r\n\r\nexport default animeData;\r\n","import React from \"react\";\r\n// components\r\nimport \"./Header.css\";\r\n\r\nconst Header = ({chooseQuiz}) => {\r\n    const headers = [{title: 'anime'} , {title: 'movie'}];\r\n    return (\r\n        <div className=\"header-container\">\r\n            <h1>Ընտրիր վիկտորինաի ոլորտը</h1>\r\n            <div className=\"button-container\">\r\n                {headers.map((item, index) => {\r\n                    return (\r\n                        <button  onClick={() => chooseQuiz(index)} className=\"header-btn\">{item.title}</button>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\n// components\r\nimport \"./SingleQuestion.css\";\r\n// material ui\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\nconst SingleQuestion = ({ id, img, checkedAnswersByUser, answers, getCheckedAnswers, isSubmitted }) => {\r\n    let isAnswerAlreadyChoosen = false;\r\n    let previouslyCeckedAnswerId = '';\r\n    const [value, setValue] = useState(\"\");\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n\r\n        getCheckedAnswers(id, event.target.value);\r\n    };\r\n\r\n    if(checkedAnswersByUser){\r\n        const changedQuestion = checkedAnswersByUser.find((item) => item.questionId === id);\r\n        if(changedQuestion) {\r\n            isAnswerAlreadyChoosen = true;\r\n            previouslyCeckedAnswerId = changedQuestion.answerId\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"question-container\">\r\n            <div className=\"image-container\">\r\n                <img src={img} alt=\"test img\" className=\"image\" />\r\n            </div>\r\n            <div>\r\n                <RadioGroup\r\n                    aria-label=\"gender\"\r\n                    name=\"gender1\"\r\n                    value={isAnswerAlreadyChoosen ? previouslyCeckedAnswerId : value}\r\n                    onChange={handleChange}\r\n                >\r\n                    {console.log(answers)}\r\n                    {answers.map(({ id, title, correct }) => {\r\n                        return (\r\n                            <FormControlLabel\r\n                                className={ isSubmitted && previouslyCeckedAnswerId === id && correct ? \"correct-answer\" :\r\n                                            isSubmitted && previouslyCeckedAnswerId === id && !correct ? \"wrong-answer\" : \"\"}\r\n                                key={id}\r\n                                value={id}\r\n                                control={<Radio />}\r\n                                label={title}\r\n                            />\r\n                        );\r\n                    })}\r\n                </RadioGroup>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SingleQuestion;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// components\r\nimport \"./Pagination.css\";\r\n// material ui\r\n\r\nfunction Pagination({ paginationData, handlePaginationChange, isSubmitted }) {\r\n    return (\r\n        <div className=\"pagination-section\">\r\n            <div>\r\n                {paginationData.map((item, index) => {\r\n                    return <button className={ item.correct && isSubmitted ? \"correct-answer\" : (!item.correct && isSubmitted) ? \"wrong-answer\" : ''} key={index} onClick={handlePaginationChange}>{item.pageNumber}</button>\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nPagination.propTypes = {\r\n    handlePaginationChange: PropTypes.func.isRequired,\r\n    paginationData: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\n// material ui\r\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n    createStyles({\r\n        modal: {\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n        },\r\n        paper: {\r\n            backgroundColor: theme.palette.background.paper,\r\n            border: \"2px solid #000\",\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(2, 4, 3),\r\n        },\r\n        modalTitle: {\r\n            textAlign: \"center\",\r\n        },\r\n    })\r\n);\r\n\r\nexport default function TransitionsModal({ handleSubmit, points }) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleOpen = () => {\r\n        handleSubmit();\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                onClick={handleOpen}\r\n            >\r\n                Submit\r\n            </Button>\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={open}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={open}>\r\n                    <div className={classes.paper}>\r\n                        <h2\r\n                            id=\"transition-modal-title\"\r\n                            className={classes.modalTitle}\r\n                        >\r\n                            Nice work\r\n                        </h2>\r\n                        <p id=\"transition-modal-description\">\r\n                            You gain{\" \"}\r\n                            <span style={{ fontSize: \"25px\", color: \"blue\" }}>\r\n                                {points}\r\n                            </span>{\" \"}\r\n                            <span>{points > 1 ? \"points !!\" : \"point !!\"}</span>\r\n                        </p>\r\n                    </div>\r\n                </Fade>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\n// components\r\nimport \"./List.css\";\r\nimport SingleQuestion from \"../singleQuestion/SingleQuestion\";\r\nimport Pagination from \"../Pagination/Pagination\";\r\nimport TransitionsModal from \"../modal/Modal\";\r\n// material ui\r\nimport { Card } from \"@material-ui/core\";\r\n\r\nconst QUESTIONS_PER_PAGE = 1;\r\n\r\nconst List = ({ data,checkedAnswersByUser, paginationData, getCheckedAnswers, handleSubmit, points, isSubmitted }) => {\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const indexOfLastQuestion = currentPage * QUESTIONS_PER_PAGE;\r\n    const indexOfFirstQuestion = indexOfLastQuestion - QUESTIONS_PER_PAGE;\r\n    const totalPages = Math.ceil(data.length / QUESTIONS_PER_PAGE);\r\n    const currentQuerstions = data.slice(\r\n        indexOfFirstQuestion,\r\n        indexOfLastQuestion\r\n    );\r\n    const isLastQuestion = currentPage === totalPages;\r\n\r\n    const handlePaginationChange = (event) => {\r\n        setCurrentPage(Number(event.target.innerText));\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"list-container\">\r\n            <Card>\r\n                <div>\r\n                    {currentQuerstions.map((item) => {\r\n                        return (\r\n                            <SingleQuestion\r\n                                key={item.id}\r\n                                id={item.id}\r\n                                img={item.img}\r\n                                checkedAnswersByUser={checkedAnswersByUser}\r\n                                answers={item.answers}\r\n                                getCheckedAnswers={getCheckedAnswers}\r\n                                isSubmitted={isSubmitted}\r\n                            />\r\n                        );\r\n                    })}\r\n                </div>\r\n                {isLastQuestion ? (\r\n                    <div className=\"submitButton-container\">\r\n                        <TransitionsModal\r\n                            handleSubmit={handleSubmit}\r\n                            points={points}\r\n                        />\r\n                    </div>\r\n                ) : null}\r\n                <div>\r\n                    <Pagination\r\n                        paginationData={paginationData}\r\n                        handlePaginationChange={handlePaginationChange}\r\n                        isSubmitted={isSubmitted}\r\n                    />\r\n                </div>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\nexport default List;\r\n","import React from \"react\";\r\n// components\r\nimport \"./Title.css\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <div className=\"title\">\r\n            <h1 className=\"title-heading\"> {props.title}</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React, {useEffect, useState} from \"react\";\r\n// components\r\nimport \"./App.css\";\r\nimport animeData from \"./data/animeData\";\r\nimport movieData from \"./data/movieData\";\r\nimport Header from \"./Components/Header/Header\";\r\nimport List from \"./Components/List/List\";\r\nimport Title from \"./Components/Title/Title\";\r\n\r\nconst HEADER_TITLES = [\"Guess the anime\", \"Guess the movie\"];\r\nconst quizzes = [animeData , movieData];\r\n\r\nconst App = () => {\r\n    const [quiz , setQuiz] = useState(1);\r\n    const [paginationData, setPaginationData] = useState([]);\r\n    const [isSubmitted, setIsSubmitted] = useState(false);\r\n    const [checkedAnswers, setCheckedAnswers] = useState([]);\r\n    const [points, setPoints] = useState(0);\r\n    let result = 0;\r\n\r\n    const chooseQuiz = (quiz) => {\r\n      setQuiz(quiz);\r\n      setPoints(0);\r\n    };\r\n\r\n    const getCheckedAnswers = (questionId, answerId) => {\r\n        if (checkedAnswers.some((answer) => answer.questionId === questionId)) {\r\n            const newCheckedAnswers = checkedAnswers.map((item) =>\r\n                item.questionId === questionId\r\n                    ? {\r\n                          ...item,\r\n                          answerId,\r\n                      }\r\n                    : item\r\n            );\r\n            setCheckedAnswers(newCheckedAnswers);\r\n        } else {\r\n            setCheckedAnswers([\r\n                ...checkedAnswers,\r\n                {\r\n                    answerId,\r\n                    questionId,\r\n                },\r\n            ]);\r\n        }\r\n    };\r\n\r\n    const changePaginationData = () => {\r\n       const paginationData = quizzes[quiz].map((item, index) => {\r\n          const foundAnswer = checkedAnswers.find((answer) => {\r\n                return answer.questionId === item.id\r\n            });\r\n          if(foundAnswer){\r\n              const correct = item.answers.find((item) => item.id === foundAnswer.answerId).correct;\r\n              return {'correct': correct, 'pageNumber': index + 1}\r\n          }\r\n            return {'correct': false, 'pageNumber': index + 1}\r\n        });\r\n        setPaginationData(paginationData);\r\n    };\r\n\r\n    useEffect(() => {\r\n        changePaginationData();\r\n    },[checkedAnswers]);\r\n\r\n\r\n    const handleSubmit = () => {\r\n        setIsSubmitted(true);\r\n        checkedAnswers.forEach((checkedAnswer) => {\r\n            const question = quizzes[quiz].find(\r\n                (question) => question.id === checkedAnswer.questionId\r\n            );\r\n            if (question) {\r\n                const chosenAnswer = question.answers.find(\r\n                    (answer) => answer.id === checkedAnswer.answerId\r\n                );\r\n                if (chosenAnswer.correct) {\r\n                    result += 1;\r\n                    setPoints(result);\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Header chooseQuiz={chooseQuiz} />\r\n            <div>\r\n                <Title title={HEADER_TITLES[quiz]}/>\r\n                <List\r\n                    data={quizzes[quiz]}\r\n                    checkedAnswersByUser={checkedAnswers}\r\n                    paginationData={paginationData}\r\n                    getCheckedAnswers={getCheckedAnswers}\r\n                    handleSubmit={handleSubmit}\r\n                    points={points}\r\n                    isSubmitted={isSubmitted}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n// components\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}